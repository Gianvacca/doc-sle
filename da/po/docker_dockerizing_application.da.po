msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-09-30 01:22+0200\n"
"PO-Revision-Date: 2018-09-30 01:22+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: da\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. (itstool) path: chapter/title
#: xml/docker_dockerizing_application.xml:11
msgid "Creating Docker Images for Applications"
msgstr ""

#. (itstool) path: chapter/para
#: xml/docker_dockerizing_application.xml:12
msgid ""
"Docker Open Source Engine is a technology that can help you to minimize "
"resources used to run or build your applications. There are several types of "
"applications that are suitable to run inside a Docker container like "
"daemons, Web pages or applications that expose ports for communication. You "
"can use Docker Open Source Engine to automate building and deployment "
"processes by adding the build process into a Docker image, then building the "
"image and then running containers based on that image."
msgstr ""

#. (itstool) path: chapter/para
#: xml/docker_dockerizing_application.xml:21
msgid ""
"Running your application inside a Docker container provides you with the "
"following advantages:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:27
msgid ""
"You can minimize the runtime environment of the application as you can add "
"to the Docker image of the application just the required processes and "
"applications."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:34
msgid ""
"The image with your application is portable across machines also with "
"different Linux host systems."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:40
msgid "You can share the image of your application by using a repository."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:45
msgid ""
"You can use different versions of required packages in the container than "
"the host system uses without having problems with dependencies."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:51
msgid ""
"You can run several instances of the same application that are completely "
"independent from each other."
msgstr ""

#. (itstool) path: chapter/para
#: xml/docker_dockerizing_application.xml:57
msgid ""
"Using Docker Open Source Engine to build of applications has the following "
"benefits:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:62
msgid "You can prepare a complete building image."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:67
msgid "Your build always runs in the same environment."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:72
msgid ""
"Your developers can test their code in the same environment as used in "
"production."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:78
msgid "You can set up an automated building process."
msgstr ""

#. (itstool) path: chapter/para
#: xml/docker_dockerizing_application.xml:83
msgid ""
"The following section provides examples and tips on creating Docker images "
"for applications. Prior to reading further, make sure that you have "
"activated your SLES base Docker image as described in <xref linkend="
"\"Building_Pre-build_Images\"/>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/docker_dockerizing_application.xml:90
msgid "Running an Application with Specific Package Versions"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:92
msgid ""
"You may face a problem that your application uses a specific version of a "
"package that is different from the package installed on the system that "
"should run your application. You can modify your application to work with "
"another version or you may create a Docker image with that particular "
"package version. The following example of a <filename>Dockerfile</filename> "
"shows an image based on a current version of SLES but with an older version "
"of the <literal>example</literal> package"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/docker_dockerizing_application.xml:102
#, no-wrap
msgid ""
"FROM registry.suse.com/suse/sles12sp3\n"
"MAINTAINER Tux\n"
"\n"
"RUN zypper ref &amp;&amp; zypper in -f example-1.0.0-0\n"
"COPY application.rpm /tmp/\n"
"\n"
"RUN zypper --non-interactive in /tmp/application.rpm\n"
"\n"
"ENTRYPOINT [\"/etc/bin/application\"]\n"
"\n"
"CMD [\"-i\"]"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:114
msgid ""
"Now you can build the image by running in the same directory as the "
"<filename>Dockerfile</filename> resides:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/docker_dockerizing_application.xml:119
#, no-wrap
msgid "<prompt>tux &gt; </prompt>docker build --tag tux_application:latest ."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:121
msgid ""
"The <filename>Dockerfile</filename> example shown above performs the "
"following operations during the <command>docker build</command>:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:128
msgid "Updates the SLES repositories."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:133
msgid "Installs the desired version of the <literal>example</literal> package."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:138
msgid ""
"Copies your application package to the image. The source RPM must be placed "
"in the build context."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:144
msgid "Unpacks your application."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:149
msgid "The last two steps run your application after a container is started."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:155
msgid ""
"After a successful build of the <literal>tux_application</literal> image, "
"you can start a container based on your new image:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/docker_dockerizing_application.xml:160
#, no-wrap
msgid "<prompt>tux &gt; </prompt>docker run -it --name application_instance tux_application:latest"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:162
msgid ""
"You have created a container that runs a single instance of your "
"application. Bear in mind that after closing the application, the Docker "
"container exits as well."
msgstr ""

#. (itstool) path: sect1/title
#: xml/docker_dockerizing_application.xml:170
msgid "Running Applications with Specific Configuration"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:172
msgid ""
"You may need to run an application that is delivered in a standard package "
"accessible through SLES repositories but you may need to use a different "
"configuration or use specific environment variables. In case you would like "
"to run several instances of the application with non-standard configuration, "
"you can create your own image that will pass the custom configuration to the "
"application."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:181
msgid "An example with the <emphasis>example</emphasis> application follows:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/docker_dockerizing_application.xml:185
#, no-wrap
msgid ""
"FROM registry.suse.com/suse/sles12sp3\n"
"RUN zypper ref &amp;&amp; zypper --non-interactive in example\n"
"\n"
"ENV BACKUP=/backup\n"
"\n"
"RUN mkdir -p $BACKUP\n"
"COPY configuration_example /etc/example/\n"
"\n"
"ENTRYPOINT [\"/etc/bin/example\"]"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:195
msgid ""
"The above example <filename>Dockerfile</filename> results in the following "
"operations:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:202
msgid ""
"Refreshing of repositories and installation of the <emphasis>example</"
"emphasis>."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:208
msgid ""
"Sets a <literal>BACKUP</literal> environment variable (the variable persists "
"to containers started from the image). You can always overwrite the value of "
"the variable with a new one while running the container by specifying a new "
"value."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:216
msgid "Creates the directory <literal>/backup</literal>."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:221
msgid "Copies the <filename>configuration_example</filename> to the image."
msgstr ""

#. (itstool) path: listitem/para
#: xml/docker_dockerizing_application.xml:226
msgid "Runs the <emphasis>example</emphasis> application."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:232
msgid ""
"Now you can build the image and after a successful build, you can run a "
"container based on your image."
msgstr ""

#. (itstool) path: sect1/title
#: xml/docker_dockerizing_application.xml:238
msgid "Sharing Data between an Application and the Host System"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:240
msgid ""
"You may run an application that needs to share data between the "
"application's container and the host file system. Docker Open Source Engine "
"enables you to do data sharing by using volumes. You can declare a mount "
"point directly in the <filename>Dockerfile</filename>. But you cannot "
"specify a directory on the host system in the <filename>Dockerfile</"
"filename> as the directory may not be accessible at the build time. You can "
"find the mounted directory in the <literal>/var/lib/docker/volumes/</"
"literal> directory on the host system."
msgstr ""

#. (itstool) path: note/title
#: xml/docker_dockerizing_application.xml:251
msgid "Discarding Changes to the Directory to Be Shared"
msgstr ""

#. (itstool) path: note/para
#: xml/docker_dockerizing_application.xml:252
msgid ""
"After you declare a mount point by using the <literal>VOLUME</literal> "
"instruction, all your changes performed (by using the <literal>RUN</literal> "
"instruction) to the directory will be discarded. After the declaration, the "
"volume is part of a temporary container that is then removed after a "
"successful build. In case you need to e.g. change permissions, perform the "
"change before you declare the directory as a mount point in the "
"<filename>Dockerfile</filename>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:263
msgid ""
"You can specify a particular mount point on the host system when running a "
"container by using the <literal>-v</literal> option:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/docker_dockerizing_application.xml:268
#, no-wrap
msgid "<prompt>tux &gt; </prompt>docker run -it --name testing -v /home/tux/data:/data sles12sp3:latest /bin/bash"
msgstr ""

#. (itstool) path: note/para
#: xml/docker_dockerizing_application.xml:271
msgid ""
"Using the <literal>-v</literal> option overwrites the <literal>VOLUME</"
"literal> instruction if you specify the same mount point in the container."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:278
msgid ""
"Now let us create an example image with a Web server that will read Web "
"content from the host's file system. The <filename>Dockerfile</filename> "
"could look as follows:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/docker_dockerizing_application.xml:284
#, no-wrap
msgid ""
"FROM registry.suse.com/suse/sles12sp3\n"
"RUN zypper ref &amp;&amp; zypper --non-interactive in apache2\n"
"\n"
"COPY apache2 /etc/sysconfig/\n"
"\n"
"RUN chown -R admin /data\n"
"\n"
"EXPOSE 80\n"
"\n"
"VOLUME /data\n"
"\n"
"ENTRYPOINT [\"apache2ctl\"]"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:297
msgid ""
"The example above installs the Apache Web server to the image and copies all "
"your configuration to the image. The <literal>data</literal> directory will "
"be owned by the <emphasis>admin</emphasis> user and will be used as a mount "
"point to store your web pages."
msgstr ""

#. (itstool) path: sect1/title
#: xml/docker_dockerizing_application.xml:305
msgid "Applications Running in the Background"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:307
msgid ""
"Your application may need to run in the background as a daemon or as an "
"application exposing ports for communication. In that case a typical Docker "
"container may be run in background. Do not run your application in the "
"container in the background as it may cause exiting of the container. Run "
"the container in the background instead. An example <filename>Dockerfile</"
"filename> for an application exposing a port looks as follows:"
msgstr ""

#. (itstool) path: example/title
#: xml/docker_dockerizing_application.xml:318
msgid ""
"Building an Apache2 Web Server Docker Container (<filename>Dockerfile</"
"filename>)"
msgstr ""

#. (itstool) path: example/screen
#: xml/docker_dockerizing_application.xml:319
#, no-wrap
msgid ""
"FROM registry.suse.com/suse/sle15 <co xml:id=\"co.dockerfile.apache2.from\"/>\n"
"MAINTAINER tux <co xml:id=\"co.dockerfile.apache2.maintainer\"/>\n"
"\n"
"ADD etc/ /etc/zypp/ <co xml:id=\"co.dockerfile.apache2.repos_services\"/>\n"
"RUN zypper refs &amp;&amp; zypper refresh <co xml:id=\"co.dockerfile.apache2.refresh\"/>\n"
"RUN zypper --non-interactive in apache2 <co xml:id=\"co.dockerfile.apache2.install\"/>\n"
"\n"
"RUN echo \"The Web Server is running\" &gt; /srv/www/htdocs/test.html <co xml:id=\"co.dockerfile.apache2.echo\"/>\n"
"# COPY data/* /srv/www/htdocs/ <co xml:id=\"co.dockerfile.apache2.copy\"/>\n"
"\n"
"EXPOSE 80 <co xml:id=\"co.dockerfile.apache2.expose\"/>\n"
"\n"
"ENTRYPOINT [\"/usr/sbin/httpd\"]\n"
"CMD [\"-D\", \"FOREGROUND\"]"
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:335
msgid "Base image, taken from <xref linkend=\"Building_Pre-build_Images\"/>."
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:338
msgid "Optional maintainer of the image."
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:341
msgid ""
"The repositories and service files. These are copied to <filename>/etc/zypp/"
"repos.d</filename> and <filename>/etc/zypp/services.d</filename> to make "
"these files on the host available in the Docker container too."
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:346
msgid "The repositories and services are refreshed by this commands"
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:349
msgid "The installation of Apache2."
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:352
msgid ""
"The test line for debugging purposes; can be removed if everything works as "
"expected."
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:356
msgid ""
"The copy instruction to copy your own data to the server's directory. "
"Currently, this line is disabled due to the hash mark in the first column."
msgstr ""

#. (itstool) path: callout/para
#: xml/docker_dockerizing_application.xml:362
msgid "The exposed port for the Apache Web server."
msgstr ""

#. (itstool) path: note/title
#: xml/docker_dockerizing_application.xml:368
msgid "Check for Running Apache2 Instances on Your Host"
msgstr ""

#. (itstool) path: note/para
#: xml/docker_dockerizing_application.xml:369
msgid ""
"Make sure that you do not have any Apache2 server instances running on your "
"host. The Docker container will not serve any data if you have a host "
"Apache2 server running. Remove or stop any Apache2 servers on your host."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:375
msgid "To use the container, proceed as follows:"
msgstr ""

#. (itstool) path: procedure/title
#: xml/docker_dockerizing_application.xml:377
msgid "Testing the Apache2 Web Server"
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:379
msgid "Prepare your system for the build process:"
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:382
msgid ""
"Make sure your host is subscribed to the <guimenu>Server Applications "
"Module</guimenu>. Open YaST and select <guimenu>Add System Extensions or "
"Modules</guimenu> to see the available modules and extensions."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:387
msgid ""
"Make sure you have installed the SUSE Linux Enterprise images from SUSE "
"Registry as described in <xref linkend=\"Building_Pre-build_Images\"/>."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:391
msgid ""
"Save the <filename>Dockerfile</filename> from <xref linkend=\"ex.docker."
"dockerfile.apache2\"/> into the <filename class=\"directory\">docker</"
"filename> directory."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:396
msgid ""
"Copy the registered repositories and service files to the <filename class="
"\"directory\">docker/etc</filename> directory:"
msgstr ""

#. (itstool) path: step/screen
#: xml/docker_dockerizing_application.xml:398
#, no-wrap
msgid ""
"cd docker\n"
"mkdir etc\n"
"sudo cp -a /etc/zypp/{repos.d,services.d} etc/"
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:401
msgid ""
"This ensures that the Docker container can access the repositories and "
"services registered with the host. Instead of copying all repository and "
"service files, you can copy only the ones that are required by the Docker "
"container."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:409
msgid ""
"Put your HTML files into the <filename>docker/data</filename> directory. The "
"contents of this directory is copied into the Docker image, and thus is "
"published by the Web server."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:417
msgid ""
"Build the container. Set a tag for your image with the <option>-t</option> "
"option (here <literal>tux/apache2</literal>, but you can use any name you "
"want):"
msgstr ""

#. (itstool) path: step/screen
#: xml/docker_dockerizing_application.xml:420
#, no-wrap
msgid "sudo docker build -t tux/apache2 ."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:421
msgid ""
"Docker Open Source Engine refreshes repositories and installs the Apache2 "
"server as it is not installed by default in the SLES Docker image."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:425
#: xml/docker_dockerizing_application.xml:463
msgid "Run the image in detached mode:"
msgstr ""

#. (itstool) path: step/screen
#: xml/docker_dockerizing_application.xml:426
#: xml/docker_dockerizing_application.xml:464
#, no-wrap
msgid "docker run --detach --interactive --tty tux/apache2"
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:427
msgid "Docker Open Source Engine returns the container ID, for example:"
msgstr ""

#. (itstool) path: step/screen
#: xml/docker_dockerizing_application.xml:428
#, no-wrap
msgid "7bd674eb196d330d50f8a3cfc2bc61a243a4a535390767250b11a7886134ab93"
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:431
msgid ""
"Point your browser to <uri>http://localhost:80/test.html</uri>. You should "
"see the message <literal>The Web Server is running</literal>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:437
msgid ""
"The above procedure describes how to build an image containing the Apache2 "
"Web server. You can use the resulting container to serve your data with the "
"Apache2 Web server by following these steps:"
msgstr ""

#. (itstool) path: procedure/title
#: xml/docker_dockerizing_application.xml:443
msgid "Creating a Docker Container with your Own Data"
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:445
msgid "Stop and remove the previous container using the following command:"
msgstr ""

#. (itstool) path: step/screen
#: xml/docker_dockerizing_application.xml:446
#, no-wrap
msgid ""
"docker ps --latest\n"
"CONTAINER ID        IMAGE               COMMAND                  [...]\n"
"<emphasis role=\"bold\">afee0124a0c7</emphasis>        tux/apache2         \"/usr/sbin/httpd -...\"   [...]\n"
"docker rm --force afee0124a0c7"
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:452
msgid ""
"Remove or disable the echo line <xref linkend=\"co.dockerfile.apache2.echo\"/"
"> in <xref linkend=\"ex.docker.dockerfile.apache2\"/> and remove the hash "
"character in the first column of the copy line <xref linkend=\"co.dockerfile."
"apache2.copy\"/>."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:459
msgid ""
"Rebuild the image as described in <xref linkend=\"st.docker.apache2.build\"/"
"> of <xref linkend=\"pro.docker.apache2\" xrefstyle=\"select:label\"/>."
msgstr ""

#. (itstool) path: step/para
#: xml/docker_dockerizing_application.xml:465
msgid "Docker Open Source Engine responds with the container ID, for example:"
msgstr ""

#. (itstool) path: step/screen
#: xml/docker_dockerizing_application.xml:466
#, no-wrap
msgid "e43fff4ae9832ecdb7677c058a73039d7610c32145a1d9b6ad0a4ed52b5c4dc7"
msgstr ""

#. (itstool) path: sect1/para
#: xml/docker_dockerizing_application.xml:469
msgid ""
"View the published data at <uri>http://localhost:80</uri>. If you do not "
"want to copy your data into the Docker container, share a specific directory "
"on your host. Refer to <link xlink:href=\"https://docs.docker.com/storage/"
"volumes/\"/> for more information."
msgstr ""
