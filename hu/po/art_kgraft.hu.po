msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-09-10 19:38+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr "translator-credits"

#. (itstool) path: article/title
#: xml/art_kgraft.xml:12
msgid "Live Kernel Patching Using kGraft"
msgstr "Live Kernel Patching Using kGraft"

#. (itstool) path: article/subtitle
#: xml/art_kgraft.xml:13
#, fuzzy
#| msgid ""
#| "<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
#| "phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase "
#| "os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte"
#| "\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> <phrase "
#| "role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os="
#| "\"sles;sled;slerte\">12 SP3</phrase></phrase>"
msgid ""
"<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
"phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os="
"\"sled\">SUSE Linux Enterprise Desktop</phrase></phrase> <phrase role="
"\"productnumber\"><phrase os=\"osuse\">15.0</phrase><phrase os=\"sles;sled"
"\">15</phrase></phrase>"
msgstr ""
"<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
"phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os="
"\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE "
"Linux Enterprise Real Time Extension</phrase></phrase> <phrase role="
"\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os=\"sles;sled;"
"slerte\">12 SP3</phrase></phrase>"

#. (itstool) path: info/productname
#: xml/art_kgraft.xml:19
#, fuzzy
#| msgid ""
#| "<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
#| "phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase "
#| "os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte"
#| "\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>"
msgid ""
"<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
"phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os="
"\"sled\">SUSE Linux Enterprise Desktop</phrase></phrase>"
msgstr ""
"<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
"phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os="
"\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE "
"Linux Enterprise Real Time Extension</phrase></phrase>"

#. (itstool) path: info/productnumber
#: xml/art_kgraft.xml:20
#, fuzzy
#| msgid ""
#| "<phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase "
#| "os=\"sles;sled;slerte\">12 SP3</phrase></phrase>"
msgid ""
"<phrase role=\"productnumber\"><phrase os=\"osuse\">15.0</phrase><phrase os="
"\"sles;sled\">15</phrase></phrase>"
msgstr ""
"<phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os="
"\"sles;sled;slerte\">12 SP3</phrase></phrase>"

#~ msgid ""
#~ "This document describes the basic principles of the kGraft live patching "
#~ "technology and provides usage guidelines for the SLE Live Patching "
#~ "service."
#~ msgstr ""
#~ "This document describes the basic principles of the kGraft live patching "
#~ "technology and provides usage guidelines for the SLE Live Patching "
#~ "service."

#~ msgid ""
#~ "kGraft is a live patching technology for runtime patching of the Linux "
#~ "kernel, without stopping the kernel. This maximizes system uptime, and "
#~ "thus system availability, which is important for mission-critical "
#~ "systems. By allowing dynamic patching of the kernel, the technology also "
#~ "encourages users to install critical security updates without deferring "
#~ "them to a scheduled downtime."
#~ msgstr ""
#~ "kGraft is a live patching technology for runtime patching of the Linux "
#~ "kernel, without stopping the kernel. This maximizes system uptime, and "
#~ "thus system availability, which is important for mission-critical "
#~ "systems. By allowing dynamic patching of the kernel, the technology also "
#~ "encourages users to install critical security updates without deferring "
#~ "them to a scheduled downtime."

#~ msgid ""
#~ "A kGraft patch is a kernel module, intended for replacing whole functions "
#~ "in the kernel. kGraft primarily offers in-kernel infrastructure for "
#~ "integration of the patched code with base kernel code at runtime."
#~ msgstr ""
#~ "A kGraft patch is a kernel module, intended for replacing whole functions "
#~ "in the kernel. kGraft primarily offers in-kernel infrastructure for "
#~ "integration of the patched code with base kernel code at runtime."

#~ msgid ""
#~ "SLE Live Patching is a service provided on top of regular SUSE Linux "
#~ "Enterprise Server maintenance. kGraft patches distributed through SLE "
#~ "Live Patching supplement regular SLES maintenance updates. Common update "
#~ "stack and procedures can be used for SLE Live Patching deployment."
#~ msgstr ""
#~ "SLE Live Patching is a service provided on top of regular SUSE Linux "
#~ "Enterprise Server maintenance. kGraft patches distributed through SLE "
#~ "Live Patching supplement regular SLES maintenance updates. Common update "
#~ "stack and procedures can be used for SLE Live Patching deployment."

#~ msgid "Advantages of kGraft"
#~ msgstr "Advantages of kGraft"

#~ msgid ""
#~ "Live kernel patching using kGraft is especially useful for quick response "
#~ "in emergencies (when serious vulnerabilities are known and should be "
#~ "fixed when possible or there are serious system stability issues with a "
#~ "known fix). It is not used for scheduled updates where time is not "
#~ "critical."
#~ msgstr ""
#~ "Live kernel patching using kGraft is especially useful for quick response "
#~ "in emergencies (when serious vulnerabilities are known and should be "
#~ "fixed when possible or there are serious system stability issues with a "
#~ "known fix). It is not used for scheduled updates where time is not "
#~ "critical."

#~ msgid ""
#~ "Typical use cases for kGraft include systems like memory databases with "
#~ "huge amounts of RAM, where boot-up times of 15 minutes or more are no "
#~ "exception, large simulations that need weeks or months without a restart, "
#~ "or infrastructure building blocks providing continuous service to a large "
#~ "number of consumers."
#~ msgstr ""
#~ "Typical use cases for kGraft include systems like memory databases with "
#~ "huge amounts of RAM, where boot-up times of 15 minutes or more are no "
#~ "exception, large simulations that need weeks or months without a restart, "
#~ "or infrastructure building blocks providing continuous service to a large "
#~ "number of consumers."

#~ msgid ""
#~ "The main advantage of kGraft is that it never requires stopping the "
#~ "kernel, not even for a short time period."
#~ msgstr ""
#~ "The main advantage of kGraft is that it never requires stopping the "
#~ "kernel, not even for a short time period."

#~ msgid ""
#~ "A kGraft patch is a <filename>.ko</filename> kernel module in a KMP RPM "
#~ "package. It is inserted into the kernel using the <command>insmod</"
#~ "command> command when the RPM package is installed or updated. kGraft "
#~ "replaces whole functions in the kernel, even if they are being executed. "
#~ "An updated kGraft module can replace an existing patch if necessary."
#~ msgstr ""
#~ "A kGraft patch is a <filename>.ko</filename> kernel module in a KMP RPM "
#~ "package. It is inserted into the kernel using the <command>insmod</"
#~ "command> command when the RPM package is installed or updated. kGraft "
#~ "replaces whole functions in the kernel, even if they are being executed. "
#~ "An updated kGraft module can replace an existing patch if necessary."

#~ msgid ""
#~ "kGraft is also lean—it contains only a small amount of code, because it "
#~ "leverages other standard Linux technologies."
#~ msgstr ""
#~ "kGraft is also lean—it contains only a small amount of code, because it "
#~ "leverages other standard Linux technologies."

#~ msgid "Low-level Function of kGraft"
#~ msgstr "Low-level Function of kGraft"

#~ msgid ""
#~ "kGraft uses the ftrace infrastructure to perform patching. The following "
#~ "describes the implementation on the x86-64 architecture."
#~ msgstr ""
#~ "kGraft uses the ftrace infrastructure to perform patching. The following "
#~ "describes the implementation on the x86-64 architecture."

#~ msgid ""
#~ "To patch a kernel function, kGraft needs some space at the start of the "
#~ "function to insert a jump to a new function. This space is allocated "
#~ "during kernel compilation by GCC with function profiling turned on. In "
#~ "particular, a 5-byte call instruction is injected to the start of kernel "
#~ "functions. When such instrumented kernel is booting, profiling calls are "
#~ "replaced by 5-byte NOP (no operation) instructions."
#~ msgstr ""
#~ "To patch a kernel function, kGraft needs some space at the start of the "
#~ "function to insert a jump to a new function. This space is allocated "
#~ "during kernel compilation by GCC with function profiling turned on. In "
#~ "particular, a 5-byte call instruction is injected to the start of kernel "
#~ "functions. When such instrumented kernel is booting, profiling calls are "
#~ "replaced by 5-byte NOP (no operation) instructions."

#~ msgid ""
#~ "After patching starts, the first byte is replaced by the INT3 "
#~ "(breakpoint) instruction. This ensures atomicity of the 5-byte "
#~ "instruction replacement. The other four bytes are replaced by the address "
#~ "to the new function. Finally, the first byte is replaced by the JMP (long "
#~ "jump) opcode."
#~ msgstr ""
#~ "After patching starts, the first byte is replaced by the INT3 "
#~ "(breakpoint) instruction. This ensures atomicity of the 5-byte "
#~ "instruction replacement. The other four bytes are replaced by the address "
#~ "to the new function. Finally, the first byte is replaced by the JMP (long "
#~ "jump) opcode."

#~ msgid ""
#~ "Inter-processor non-maskable interrupts (IPI NMI) are used throughout the "
#~ "process to flush speculative decoding queues of other CPUs in the system. "
#~ "This allows switching to the new function without ever stopping the "
#~ "kernel, not even for a very short moment. The interruptions by IPI NMIs "
#~ "can be measured in microseconds and are not considered service "
#~ "interruptions as they happen while the kernel is running in any case."
#~ msgstr ""
#~ "Inter-processor non-maskable interrupts (IPI NMI) are used throughout the "
#~ "process to flush speculative decoding queues of other CPUs in the system. "
#~ "This allows switching to the new function without ever stopping the "
#~ "kernel, not even for a very short moment. The interruptions by IPI NMIs "
#~ "can be measured in microseconds and are not considered service "
#~ "interruptions as they happen while the kernel is running in any case."

#~ msgid ""
#~ "Callers are never patched. Instead, callees' NOPs are replaced by a JMP "
#~ "to the new function. JMP instructions remain forever. This takes care of "
#~ "function pointers, including in structures, and does not require saving "
#~ "any old data for the possibility of un-patching."
#~ msgstr ""
#~ "Callers are never patched. Instead, callees' NOPs are replaced by a JMP "
#~ "to the new function. JMP instructions remain forever. This takes care of "
#~ "function pointers, including in structures, and does not require saving "
#~ "any old data for the possibility of un-patching."

#~ msgid ""
#~ "However, these steps alone would not be good enough: since the functions "
#~ "would be replaced non-atomically, a new fixed function in one part of the "
#~ "kernel could still be calling an old function elsewhere or vice versa. If "
#~ "the semantics of the function interfaces changed in the patch, chaos "
#~ "would ensue."
#~ msgstr ""
#~ "However, these steps alone would not be good enough: since the functions "
#~ "would be replaced non-atomically, a new fixed function in one part of the "
#~ "kernel could still be calling an old function elsewhere or vice versa. If "
#~ "the semantics of the function interfaces changed in the patch, chaos "
#~ "would ensue."

#~ msgid ""
#~ "Thus, until all functions are replaced, kGraft uses an approach based on "
#~ "trampolines and similar to RCU (read-copy-update), to ensure a consistent "
#~ "view of the world to each user space thread, kernel thread and kernel "
#~ "interrupt. A per-thread flag is set on each kernel entry and exit. This "
#~ "way, an old function would always call another old function and a new "
#~ "function always a new one. Once all processes have the \"new universe\" "
#~ "flag set, patching is complete, trampolines can be removed and the code "
#~ "can operate at full speed without performance impact other than an extra-"
#~ "long jump for each patched function."
#~ msgstr ""
#~ "Thus, until all functions are replaced, kGraft uses an approach based on "
#~ "trampolines and similar to RCU (read-copy-update), to ensure a consistent "
#~ "view of the world to each user space thread, kernel thread and kernel "
#~ "interrupt. A per-thread flag is set on each kernel entry and exit. This "
#~ "way, an old function would always call another old function and a new "
#~ "function always a new one. Once all processes have the \"new universe\" "
#~ "flag set, patching is complete, trampolines can be removed and the code "
#~ "can operate at full speed without performance impact other than an extra-"
#~ "long jump for each patched function."

#~ msgid "Installing kGraft Patches"
#~ msgstr "Installing kGraft Patches"

#~ msgid ""
#~ "This section describes the activation of the SUSE Linux Enterprise Live "
#~ "Patching extension and the installation of kGraft patches."
#~ msgstr ""
#~ "This section describes the activation of the SUSE Linux Enterprise Live "
#~ "Patching extension and the installation of kGraft patches."

#~ msgid "Activation of SLE Live Patching"
#~ msgstr "Activation of SLE Live Patching"

#~ msgid "To activate SLE Live Patching on your system, follow these steps:"
#~ msgstr "To activate SLE Live Patching on your system, follow these steps:"

#~ msgid ""
#~ "If your SLES system is not yet registered, register it. Registration can "
#~ "be done during the system installation or later using the YaST "
#~ "<guimenu>Product Registration</guimenu> module (<command>yast2 "
#~ "registration</command>). After registration, click <guimenu>Yes</guimenu> "
#~ "to see the list of available online updates."
#~ msgstr ""
#~ "If your SLES system is not yet registered, register it. Registration can "
#~ "be done during the system installation or later using the YaST "
#~ "<guimenu>Product Registration</guimenu> module (<command>yast2 "
#~ "registration</command>). After registration, click <guimenu>Yes</guimenu> "
#~ "to see the list of available online updates."

#~ msgid ""
#~ "If your SLES system is already registered, but SLE Live Patching is not "
#~ "yet activated, open the YaST <guimenu>Product Registration</guimenu> "
#~ "module (<command>yast2 registration</command>) and click <guimenu>Select "
#~ "Extensions</guimenu>."
#~ msgstr ""
#~ "If your SLES system is already registered, but SLE Live Patching is not "
#~ "yet activated, open the YaST <guimenu>Product Registration</guimenu> "
#~ "module (<command>yast2 registration</command>) and click <guimenu>Select "
#~ "Extensions</guimenu>."

#~ msgid ""
#~ "Select <guimenu>SUSE Linux Enterprise Live Patching 12</guimenu> in the "
#~ "list of available extensions and click <guimenu>Next</guimenu>."
#~ msgstr ""
#~ "Select <guimenu>SUSE Linux Enterprise Live Patching 12</guimenu> in the "
#~ "list of available extensions and click <guimenu>Next</guimenu>."

#~ msgid "Confirm the license terms and click <guimenu>Next</guimenu>."
#~ msgstr "Confirm the license terms and click <guimenu>Next</guimenu>."

#~ msgid ""
#~ "Enter the SLE Live Patching registration code and click <guimenu>Next</"
#~ "guimenu>."
#~ msgstr ""
#~ "Enter the SLE Live Patching registration code and click <guimenu>Next</"
#~ "guimenu>."

#~ msgid ""
#~ "Check the <guimenu>Installation Summary</guimenu> and selected "
#~ "<guimenu>Patterns</guimenu>. The pattern <systemitem>Live Patching</"
#~ "systemitem> should be selected for installation."
#~ msgstr ""
#~ "Check the <guimenu>Installation Summary</guimenu> and selected "
#~ "<guimenu>Patterns</guimenu>. The pattern <systemitem>Live Patching</"
#~ "systemitem> should be selected for installation."

#~ msgid ""
#~ "Click <guimenu>Accept</guimenu> to complete the installation. This will "
#~ "install the base kGraft components on your system together with the "
#~ "initial live patch."
#~ msgstr ""
#~ "Click <guimenu>Accept</guimenu> to complete the installation. This will "
#~ "install the base kGraft components on your system together with the "
#~ "initial live patch."

#~ msgid "Updating System"
#~ msgstr "Updating System"

#~ msgid ""
#~ "SLE Live Patching updates are distributed in a form that allows using "
#~ "standard SLE update stack for patch application. The initial live patch "
#~ "can be updated using <command>zypper patch</command>, YaST2 Online Update "
#~ "or equivalent method."
#~ msgstr ""
#~ "SLE Live Patching updates are distributed in a form that allows using "
#~ "standard SLE update stack for patch application. The initial live patch "
#~ "can be updated using <command>zypper patch</command>, YaST2 Online Update "
#~ "or equivalent method."

#~ msgid ""
#~ "The kernel is patched automatically during the package installation. "
#~ "However, invocations of the old kernel functions are not completely "
#~ "eliminated until all sleeping processes wake up and get out of the way. "
#~ "This can take a considerable amount of time. Despite this, sleeping "
#~ "processes that use the old kernel functions are not considered a security "
#~ "issue. Nevertheless, in the current version of kGraft, it is not possible "
#~ "to apply another kGraft patch until all processes cross the kernel space "
#~ "to user space boundary to use patched functions from the previous patch."
#~ msgstr ""
#~ "The kernel is patched automatically during the package installation. "
#~ "However, invocations of the old kernel functions are not completely "
#~ "eliminated until all sleeping processes wake up and get out of the way. "
#~ "This can take a considerable amount of time. Despite this, sleeping "
#~ "processes that use the old kernel functions are not considered a security "
#~ "issue. Nevertheless, in the current version of kGraft, it is not possible "
#~ "to apply another kGraft patch until all processes cross the kernel space "
#~ "to user space boundary to use patched functions from the previous patch."

#~ msgid ""
#~ "To see the global status of patching, check the flag in <filename>/sys/"
#~ "kernel/kgraft/in_progress</filename>. The value <literal>1</literal> "
#~ "signifies the existence of sleeping processes that still need to be woken "
#~ "(the patching is still in progress). The value <literal>0</literal> "
#~ "signifies that all processes are using solely the patched functions and "
#~ "patching has finished already. Alternatively, use the <command>kgr "
#~ "status</command> command to obtain the same information."
#~ msgstr ""
#~ "To see the global status of patching, check the flag in <filename>/sys/"
#~ "kernel/kgraft/in_progress</filename>. The value <literal>1</literal> "
#~ "signifies the existence of sleeping processes that still need to be woken "
#~ "(the patching is still in progress). The value <literal>0</literal> "
#~ "signifies that all processes are using solely the patched functions and "
#~ "patching has finished already. Alternatively, use the <command>kgr "
#~ "status</command> command to obtain the same information."

#~ msgid ""
#~ "The flag can be checked on a per-process basis too. Check the number in "
#~ "<filename>/proc/<replaceable>PROCESS_NUMBER</replaceable>/"
#~ "kgr_in_progress</filename> for each process individually. Again, the "
#~ "value <literal>1</literal> signifies sleeping process that still needs to "
#~ "be woken. Alternatively, use the <command>kgr blocking</command> command "
#~ "to output the list of sleeping processes."
#~ msgstr ""
#~ "The flag can be checked on a per-process basis too. Check the number in "
#~ "<filename>/proc/<replaceable>PROCESS_NUMBER</replaceable>/"
#~ "kgr_in_progress</filename> for each process individually. Again, the "
#~ "value <literal>1</literal> signifies sleeping process that still needs to "
#~ "be woken. Alternatively, use the <command>kgr blocking</command> command "
#~ "to output the list of sleeping processes."

#~ msgid ""
#~ "It is up to the system administrator to decide how to deal with the "
#~ "sleeping processes. One possibility is to wait, another possibility is to "
#~ "send a SIGSTOP signal followed by a SIGCONT signal to all the sleeping "
#~ "processes. It can be achieved easily using the <command>kgr poke</"
#~ "command> command. Running processes are not interrupted."
#~ msgstr ""
#~ "It is up to the system administrator to decide how to deal with the "
#~ "sleeping processes. One possibility is to wait, another possibility is to "
#~ "send a SIGSTOP signal followed by a SIGCONT signal to all the sleeping "
#~ "processes. It can be achieved easily using the <command>kgr poke</"
#~ "command> command. Running processes are not interrupted."

#~ msgid "Removing a kGraft Patch"
#~ msgstr "Removing a kGraft Patch"

#~ msgid "To remove a kGraft patch, use the following procedure:"
#~ msgstr "To remove a kGraft patch, use the following procedure:"

#~ msgid "First remove the patch itself using zypper:"
#~ msgstr "First remove the patch itself using zypper:"

#~ msgid ""
#~ "\n"
#~ "    zypper rm kgraft-patch-<replaceable>3_12_32-25-default</replaceable>\n"
#~ "   "
#~ msgstr ""
#~ "\n"
#~ "    zypper rm kgraft-patch-<replaceable>3_12_32-25-default</replaceable>\n"
#~ "   "

#~ msgid "Then reboot the machine."
#~ msgstr "Then reboot the machine."

#~ msgid "Stuck Kernel Execution Threads"
#~ msgstr "Stuck Kernel Execution Threads"

#~ msgid ""
#~ "Kernel threads need to be prepared to handle kGraft. Third-party software "
#~ "may not be completely ready for kGraft adoption and its kernel modules "
#~ "may spawn kernel execution threads. These threads will block the patching "
#~ "process indefinitely. As an emergency measure kGraft offers the "
#~ "possibility to force finishing of the patching process without waiting "
#~ "for all execution threads to cross the safety checkpoint. This can be "
#~ "achieved by writing <literal>0</literal> into <filename>/sys/kernel/"
#~ "kgraft/in_progress</filename>. Consult SUSE Support before performing "
#~ "this procedure."
#~ msgstr ""
#~ "Kernel threads need to be prepared to handle kGraft. Third-party software "
#~ "may not be completely ready for kGraft adoption and its kernel modules "
#~ "may spawn kernel execution threads. These threads will block the patching "
#~ "process indefinitely. As an emergency measure kGraft offers the "
#~ "possibility to force finishing of the patching process without waiting "
#~ "for all execution threads to cross the safety checkpoint. This can be "
#~ "achieved by writing <literal>0</literal> into <filename>/sys/kernel/"
#~ "kgraft/in_progress</filename>. Consult SUSE Support before performing "
#~ "this procedure."

#~ msgid "The <command>kgr</command> Tool"
#~ msgstr "The <command>kgr</command> Tool"

#~ msgid ""
#~ "Several kGraft management tasks can be simplified with the <command>kgr</"
#~ "command> tool. The available commands are:"
#~ msgstr ""
#~ "Several kGraft management tasks can be simplified with the <command>kgr</"
#~ "command> tool. The available commands are:"

#~ msgid "<command>kgr status</command>"
#~ msgstr "<command>kgr status</command>"

#~ msgid ""
#~ "Displays the overall status of kGraft patching (<literal>ready</literal> "
#~ "or <literal>in_progress</literal>)."
#~ msgstr ""
#~ "Displays the overall status of kGraft patching (<literal>ready</literal> "
#~ "or <literal>in_progress</literal>)."

#~ msgid "<command>kgr patches</command>"
#~ msgstr "<command>kgr patches</command>"

#~ msgid "Displays the list of loaded kGraft patches."
#~ msgstr "Displays the list of loaded kGraft patches."

#~ msgid "<command>kgr blocking</command>"
#~ msgstr "<command>kgr blocking</command>"

#~ msgid ""
#~ "Lists processes that are preventing kGraft patching from finishing. By "
#~ "default just the PIDs are listed. Specifying <option>-v</option> prints "
#~ "out command lines if available. Another <option>-v</option> displays also "
#~ "stack traces."
#~ msgstr ""
#~ "Lists processes that are preventing kGraft patching from finishing. By "
#~ "default just the PIDs are listed. Specifying <option>-v</option> prints "
#~ "out command lines if available. Another <option>-v</option> displays also "
#~ "stack traces."

#~ msgid "<command>kgr poke</command>"
#~ msgstr "<command>kgr poke</command>"

#~ msgid ""
#~ "Sends SIGSTOP and SIGCONT to all processess that are blocking kGraft "
#~ "patching from finishing."
#~ msgstr ""
#~ "Sends SIGSTOP and SIGCONT to all processess that are blocking kGraft "
#~ "patching from finishing."

#~ msgid "For detailed information, see <command>man kgr</command>."
#~ msgstr "For detailed information, see <command>man kgr</command>."

#~ msgid "Scope of kGraft Technology"
#~ msgstr "Scope of kGraft Technology"

#~ msgid ""
#~ "kGraft is based on replacing functions. Data structure alteration can be "
#~ "accomplished only indirectly with kGraft. As a result, changes to kernel "
#~ "data structure require special care and, if the change is too large, "
#~ "rebooting might be required. kGraft also might not be able to handle "
#~ "situations where one compiler is used to compile the old kernel and "
#~ "another compiler is used for compiling the patch."
#~ msgstr ""
#~ "kGraft is based on replacing functions. Data structure alteration can be "
#~ "accomplished only indirectly with kGraft. As a result, changes to kernel "
#~ "data structure require special care and, if the change is too large, "
#~ "rebooting might be required. kGraft also might not be able to handle "
#~ "situations where one compiler is used to compile the old kernel and "
#~ "another compiler is used for compiling the patch."

#~ msgid ""
#~ "Because of the way kGraft works, support for third-party modules that are "
#~ "spawning kernel threads is limited."
#~ msgstr ""
#~ "Because of the way kGraft works, support for third-party modules that are "
#~ "spawning kernel threads is limited."

#~ msgid "Scope of SLE Live Patching"
#~ msgstr "Scope of SLE Live Patching"

#~ msgid ""
#~ "Fixes for SUSE CVSS (Common Vulnerability Scoring System) level 6+ "
#~ "vulnerabilities and bug fixes related to system stability or data "
#~ "corruption will be shipped in the scope of SLE Live Patching. It might "
#~ "not be possible to produce a live patch for all kinds of fixes fulfilling "
#~ "the above criteria. SUSE reserves the right to skip fixes where "
#~ "production of a kernel live patch is unviable because of technical "
#~ "reasons. For more information on CVSS, which is the base for the SUSE "
#~ "CVSS rating, see <link xlink:href=\"http://nvd.nist.gov/cvss.cfm/\"/>."
#~ msgstr ""
#~ "Fixes for SUSE CVSS (Common Vulnerability Scoring System) level 6+ "
#~ "vulnerabilities and bug fixes related to system stability or data "
#~ "corruption will be shipped in the scope of SLE Live Patching. It might "
#~ "not be possible to produce a live patch for all kinds of fixes fulfilling "
#~ "the above criteria. SUSE reserves the right to skip fixes where "
#~ "production of a kernel live patch is unviable because of technical "
#~ "reasons. For more information on CVSS, which is the base for the SUSE "
#~ "CVSS rating, see <link xlink:href=\"http://nvd.nist.gov/cvss.cfm/\"/>."

#~ msgid "Interaction with the Support Processes"
#~ msgstr "Interaction with the Support Processes"

#~ msgid ""
#~ "In the course of resolving a technical difficulty with SUSE Support, you "
#~ "may receive a so-called Program Temporary Fix (PTF). PTFs may be issued "
#~ "for various packages including those forming the base of SLE Live "
#~ "Patching."
#~ msgstr ""
#~ "In the course of resolving a technical difficulty with SUSE Support, you "
#~ "may receive a so-called Program Temporary Fix (PTF). PTFs may be issued "
#~ "for various packages including those forming the base of SLE Live "
#~ "Patching."

#~ msgid ""
#~ "kGraft PTFs complying with the conditions described in the previous "
#~ "section can be installed as usual and SUSE will ensure that the system in "
#~ "question does not need to be rebooted and that future live updates are "
#~ "applied cleanly."
#~ msgstr ""
#~ "kGraft PTFs complying with the conditions described in the previous "
#~ "section can be installed as usual and SUSE will ensure that the system in "
#~ "question does not need to be rebooted and that future live updates are "
#~ "applied cleanly."

#~ msgid ""
#~ "PTFs issued for the base kernel disrupt the live patching process. First, "
#~ "installing the PTF kernel means a reboot as the kernel cannot be replaced "
#~ "as a whole at runtime. Second, another reboot is needed to replace the "
#~ "PTF with any regular maintenance updates for which the live patches are "
#~ "issued."
#~ msgstr ""
#~ "PTFs issued for the base kernel disrupt the live patching process. First, "
#~ "installing the PTF kernel means a reboot as the kernel cannot be replaced "
#~ "as a whole at runtime. Second, another reboot is needed to replace the "
#~ "PTF with any regular maintenance updates for which the live patches are "
#~ "issued."

#~ msgid ""
#~ "PTFs for other packages in SLE Live Patching can be treated like regular "
#~ "PTFs with the usual guarantees."
#~ msgstr ""
#~ "PTFs for other packages in SLE Live Patching can be treated like regular "
#~ "PTFs with the usual guarantees."
